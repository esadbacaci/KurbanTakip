// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230531144424_migmehmetabi")]
    partial class migmehmetabi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EntityLayer.Concrete.Cariislem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Alacak")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Borc")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<int>("HisseCariKartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CariKartId");

                    b.HasIndex("HisseCariKartId");

                    b.ToTable("Cariislems");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Carikart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasColumnType("longtext");

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Il")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Referans")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Carikarts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Hissecarikart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<decimal>("HisseTutar")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("StokId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("VekaletAlindiMi")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CariKartId");

                    b.HasIndex("StokId");

                    b.ToTable("Hissecarikarts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kasa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasColumnType("longtext");

                    b.Property<int>("CariIslemId")
                        .HasColumnType("int");

                    b.Property<bool?>("GirisMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Tutar")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CariIslemId");

                    b.ToTable("Kasas");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Stok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cins")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HisseAdet")
                        .HasColumnType("int");

                    b.Property<decimal>("HisseFiyat")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Kilo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("KupeNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Yas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stoks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Cariislem", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Carikart", "CariKart")
                        .WithMany("Cariislems")
                        .HasForeignKey("CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Hissecarikart", "HisseCariKart")
                        .WithMany("Cariislems")
                        .HasForeignKey("HisseCariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");

                    b.Navigation("HisseCariKart");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Hissecarikart", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Carikart", "CariKart")
                        .WithMany("Hissecarikarts")
                        .HasForeignKey("CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Stok", "Stok")
                        .WithMany("Hissecarikarts")
                        .HasForeignKey("StokId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");

                    b.Navigation("Stok");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kasa", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Cariislem", "CariIslem")
                        .WithMany("Kasas")
                        .HasForeignKey("CariIslemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariIslem");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Cariislem", b =>
                {
                    b.Navigation("Kasas");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Carikart", b =>
                {
                    b.Navigation("Cariislems");

                    b.Navigation("Hissecarikarts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Hissecarikart", b =>
                {
                    b.Navigation("Cariislems");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Stok", b =>
                {
                    b.Navigation("Hissecarikarts");
                });
#pragma warning restore 612, 618
        }
    }
}
